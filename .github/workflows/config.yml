name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Lint with flake8
        run: |
          source venv/bin/activate
          flake8

      - name: Run tests
        run: |
          source venv/bin/activate
          pytest --cov

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-docker:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and tag Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/oc_lettings:latest .
          docker tag ${{ secrets.DOCKER_USERNAME }}/oc_lettings:latest ${{ secrets.DOCKER_USERNAME }}/oc_lettings:${{ github.sha }}

      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/oc_lettings:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/oc_lettings:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST -d '{}' https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}?apiKey=${{ secrets.RENDER_API_KEY }}
